name: Release APK

on:
  push:
    tags:
      - 'v*'  # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
      
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        continue-on-error: true
      
      - name: Create gradlew if it does not exist
        run: |
          if [ ! -f "./gradlew" ]; then
            echo "Creating Gradle wrapper script"
            mkdir -p gradle/wrapper
            wget -O ./gradlew https://raw.githubusercontent.com/gradle/gradle/master/gradle/wrapper/gradle-wrapper.properties
            chmod +x ./gradlew
          fi
      
      - name: Download Gradle wrapper if needed
        run: |
          if [ ! -f "./gradle/wrapper/gradle-wrapper.jar" ]; then
            echo "Downloading Gradle wrapper JAR"
            mkdir -p gradle/wrapper
            wget -O gradle/wrapper/gradle-wrapper.jar https://github.com/gradle/gradle/raw/master/gradle/wrapper/gradle-wrapper.jar
          fi
      
      - name: Create local.properties
        run: echo "sdk.dir=$ANDROID_HOME" > ./local.properties
      
      - name: Build release APK
        run: ./gradlew assembleRelease
      
      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "30.0.2"
        continue-on-error: true
      
      - name: Rename unsigned APK if signing failed
        if: steps.sign_app.outcome != 'success'
        run: |
          echo "Signing failed, using unsigned APK"
          cp app/build/outputs/apk/release/app-release-unsigned.apk app/build/outputs/apk/release/WiFiHotspotModule-${{ github.ref_name }}.apk
      
      - name: Rename signed APK
        if: steps.sign_app.outcome == 'success'
        run: |
          mv ${{ steps.sign_app.outputs.signedReleaseFile }} app/build/outputs/apk/release/WiFiHotspotModule-${{ github.ref_name }}.apk
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      
      - name: Upload Release APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/WiFiHotspotModule-${{ github.ref_name }}.apk
          asset_name: WiFiHotspotModule-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive
